package net.morilib.parfait.file;

import java.io.BufferedReader;
import java.io.PrintWriter;
import java.util.LinkedHashMap;
import java.util.Map;

import net.morilib.parfait.editor.ParfaitPageEditor;
import net.morilib.parfait.translate.HashFormatter;

public final class ConvertToTargetFile {

	//
	private static final String LICENSE =
			"\tGenerated by morilib Parfait";
	private static final String PROLOGUE = "";
	private static final String DESCRIPTION = "";
	private static final String AUXILIARY = "";

	//
	private ConvertToTargetFile() {}

	/**
	 * 
	 * @param hf
	 * @param wr
	 * @param name
	 * @param ed
	 * @param rd
	 * @return
	 */
	public static boolean output(HashFormatter hf, PrintWriter wr,
			String name, ParfaitPageEditor ed, BufferedReader rd) {
		String license, rettype, defAction, prologue, desc, aux, col;
		Map<String, String> map;
		boolean plen, icase;

		map = new LinkedHashMap<String, String>();
		for(KeywordBean k : ed.getKeywords().getKeywordList()) {
			map.put(k.getKeyword(), k.getAction());
		}
		rettype   = ed.getOptions().getReturnType();
		defAction = ed.getOptions().getDefaultAction();
		license   = LICENSE;
		prologue  = "package " + ed.getOptions().getPackage() + ";\n" +
				PROLOGUE;
		desc      = DESCRIPTION;
		aux       = AUXILIARY;
		icase     = ed.getOptions().isIgnoreCase();
		if(ed.getOptions().isAutomatically()) {
			col  = null;
			plen = false;
		} else {
			col  = ed.getOptions().getColumns();
			plen = ed.getOptions().isPlusLength();
		}

		if(rd == null) {
			return hf.print(wr, hf, col, plen, icase, name, map,
					defAction, license, prologue, desc, aux, rettype);
		} else {
			return hf.replace(wr, rd, hf, col, plen, icase, name, map,
					defAction, rettype);
		}
	}

}
